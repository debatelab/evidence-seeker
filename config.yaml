# `config_version` is used internally to indicate and check whether a config is compatible with the (current) code.
config_version: 'v0.1'
used_model: model_1
description: |
  Erste Version einer Konfiguration für die EvidenceSeeker Boilerplate.
pipeline:
  system_prompt: &default_sp |
    You are a helpful assistant and an expert for the categorisation and annotation of texts.
    You read instructions carefully and follow them precisely. You give concise and clear answers.
  preprocessing:
    timeout: 60
    verbose: False
    workflow_events:
      ascriptive_analysis_event:
        name: 'Ascriptive analysis'
        description: |
          Instruct the assistant to carry out free-text analysis of ascriptions.
        prompt_template: |
          The following claim has been submitted for fact-checking.
          <claim>{claim}</claim>
          Before we proceed with retrieving evidence items, we carefully analyse the claim. Your task is to contribute to this preparatory analysis, as detailed below.
          In particular, you should  
          1. thoroughly discuss whether the claim contains ascriptions, that is, whether the claim ascribes a given statement to a person or organisation (e.g., as something the person has said, believes, acts on etc.) rather than plainly asserting that statement straightaway  -- if so, try to identify which statements are ascribed to whom exactly and in which ways;
          2. watch out for ambiguity and vagueness during your discussion, making alternative interpretations explicit.
        system_prompt: *default_sp
      list_ascriptive_claims_event:
        name: 'Ascriptive-statements list'
        description: 'List all ascriptive statements.'
        prompt_template: |
          The following claim has been submitted for analysing its ascriptive content.
          <claim>{claim}</claim>
          The analysis yielded the following results:
          <results>
          {ascriptive_analysis_event}
          </results>
          Building on this analysis: 
          - I want you to identify all ascription of the claim. In particular, you should list all ascriptions, that is, 
            statements ascribed to a person or organisation, contained in the claim;
          - Include all identified interpretations of the ascriptive content as seperate statements. 
          Format your output as a JSON object according to the following schema:
          <json-schema>
          {json_schema}
          </json-schema>
          Do not include any other text than the JSON object.
          Omit any markdown formatting. Do not include any preamble or explanation.
        system_prompt: *default_sp
      descriptive_analysis_event:
        name: 'Descriptive analysis'
        description: |
          Instruct the assistant to carry out free-text analysis of factual content.
        prompt_template: |
          The following claim has been submitted for fact-checking.
          <claim>{claim}</claim>
          Before we proceed with retrieving evidence items, we carefully analyse the claim. Your task is to contribute to this preparatory analysis, as detailed below.
          In particular, you should  
          1. thoroughly discuss whether the claim contains or implies factual or descriptive statements, which can be verified or falsified by empirical observation or scientific analysis and which may include, for example, descriptive reports, historical facts, or scientific claims -- if so, try to identify them and render them in your own words;
          2. watch out for ambiguity and vagueness during your discussion, making alternative interpretations explicit.
        system_prompt: *default_sp
      list_descriptive_claims_event:
        name: 'Descriptive-statements list'
        description: 'List all factual statements.'
        prompt_template: |
          The following claim has been submitted for analysing its descriptive content.
          <claim>{claim}</claim>
          The analysis yielded the following results:
          <results>
          {descriptive_analysis_event}
          </results>
          Building on this analysis: 
          - I want you to identify the descriptive content of the claim. In particular, you should list all factual or descriptive
            statements, which can be verified or falsified by empirical observation or scientific 
            analysis, contained in the claim.
          - Include all identified interpretations of the descriptive content as seperate statements. 
          Format your output as a JSON object according to the following schema:
          <json-schema>
          {json_schema}
          </json-schema>
          Do not include any other text than the JSON object.
          Omit any markdown formatting. Do not include any preamble or explanation.
        system_prompt: *default_sp
      normative_analysis_event:
        name: 'Normative Analysis'
        description: |
          Instruct the assistant to carry out free-text analysis of normative content.
        prompt_template: |
          The following claim has been submitted for fact-checking.
          <claim>{claim}</claim>
          Before we proceed with retrieving evidence items, we carefully analyse the claim. Your task is to contribute to this preparatory analysis, as detailed below.
          In particular, you should  
          1. thoroughly discuss whether the claim contains or implies normative statements, such as value judgements, recommendations, or evaluations -- if so, try to identify them and render them in your own words;
          2. watch out for ambiguity and vagueness during your discussion, making alternative interpretations explicit.
        system_prompt: *default_sp
      list_normative_claims_event:
        name: 'Normative-statements list'
        description: 'List all normative statements.'
        prompt_template: |
          The following claim has been submitted for analysing its normative content.
          <claim>{claim}</claim>
          The analysis yielded the following results:
          <results>
          {normative_analysis_event}
          </results>
          Building on this analysis: 
          - I want you to identify the normative content of the claim. In particular, you should list 
            all normative statements, such as value judgements, recommendations, or evaluations, contained in the claim;
          - Include all identified interpretations of the normative content as seperate statements. 
          Format your output as a JSON object according to the following schema:
          <json-schema>
          {json_schema}
          </json-schema>
          Do not include any other text than the JSON object.
          Omit any markdown formatting. Do not include any preamble or explanation.
        system_prompt: *default_sp
      negate_claim_event:
        name: 'Negate statement'
        description: 'Instruct assistant to negate a claim.'
        system_prompt: *default_sp
        prompt_template: |
          Your task is to provide the opposite of the following statement in clear and unequivocal language. 
          Do so by generating one statement that expresses the negation.
          <statement>
          {statement}
          </statement>
          Ommit any comments on your suggestion of negating the input statement. Just answer with the negated statement. 

models:
  model_1:
    name: "Llama-3.1-70B-Instruct"
    description: "NVIDEA NIM API (kostenpflichtig über DebateLab Account)"
    base_url: "https://huggingface.co/api/integrations/dgx/v1"
    model: "meta-llama/Llama-3.1-70B-Instruct"
    api_key_name: "kideku_toxicity_app_nim"
    backend_type: nim
    # TODO: pass values 
    max_tokens: 4096 # 2048
    temperature: 0.2
  model_2:
    name: "Mistral-7B-Instruct-v0.2"
    description: "HF inference API"
    base_url: "https://api-inference.huggingface.co/v1/"
    model: "mistralai/Mistral-7B-Instruct-v0.2"
    api_key_name: "HF_TOKEN_KIDEKU_INFERENCE"
    backend_type: openai
    # TODO: pass values 
    max_tokens: 1024
    temperature: 0.2

