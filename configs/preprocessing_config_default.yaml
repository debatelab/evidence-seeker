# For a detailed instruction of how to configure the preprocessor, 
# see the documentation https://debatelab.github.io/evidence-seeker.
config_version: v0.1
description: Configuration of EvidenceSeeker's preprocessing component.
# Uncomment the "env_file" line to load environment 
# variables for API keys from a file.
# The file should contain lines of the following format:
# YOUR_API_KEY_NAME=your_api_key_value
# env_file: path/to/your/api_keys.txt
system_prompt: "You are a helpful assistant with outstanding expertise in critical\
  \ thinking and logico-semantic analysis. \nYou have a background in philosophy and\
  \ experience in fact checking and debate analysis.\nYou read instructions carefully\
  \ and follow them precisely. You give concise and clear answers."
timeout: 900
language: DE
# Whether or not the workflow/pipeline should print additional informative messages
# during execution.
verbose: false
# key of the global model used if no step-specific model is defined
used_model_key: key_model_one
# Configuration of language models for the component (you can configure different models)
models:
  key_model_one:
    api_key_name: your_api_key_name
    backend_type: backend_type_of_your_model
    base_url: your_base_url
    description: description_of_your_model
    max_tokens: 1024
    model: your_model_identifier
    name: your_model_name
    temperature: 0.2
    timeout: 260
  key_model_two:
    api_key_name: your_api_key_name
    backend_type: backend_type_of_your_model
    base_url: your_base_url
    description: description_of_your_model
    max_tokens: 1024
    model: your_model_identifier
    name: your_model_name
    temperature: 0.2
    timeout: 260
# Configurations for the different steps of the preprocessing component
freetext_ascriptive_analysis:
  description: Instruct the assistant to carry out free-text ascriptions analysis.
  llm_specific_configs:
    default:
      prompt_template: 'The following {language} claim has been submitted for fact-checking.


        <claim>{claim}</claim>


        Before we proceed with retrieving evidence items, we carefully analyse the
        claim. Your task is to contribute to this preparatory analysis, as detailed
        below.

        In particular, you should thoroughly discuss whether the claim makes any explicit
        ascriptions, that is, whether it explicitly ascribes a statement to a person
        or an organisation (e.g., as something the person has said, believes, acts
        on etc.) rather than plainly asserting that statement straightaway.

        If so, clarify which statements are ascribed to whom exactly and in which
        ways.

        In doing so, watch out for ambiguity and vagueness in the claim. Make alternative
        interpretations explicit.

        Conclude your analysis with a short list of all identified ascriptions: Formulate
        each statement in a concise manner, and such that it is transparent to whom
        it is attributed. Render the clarified ascriptions in {language}.'
      system_prompt: null
  name: freetext_ascriptive_analysis
  used_model_key: null
freetext_descriptive_analysis:
  description: Instruct the assistant to carry out free-text factual/descriptive analysis.
  llm_specific_configs:
    default:
      prompt_template: 'The following {language} claim has been submitted for fact-checking.


        <claim>{claim}</claim>


        Before we proceed with retrieving evidence items, we carefully analyse the
        claim. Your task is to contribute to this preparatory analysis, as detailed
        below.

        In particular, you should thoroughly discuss whether the claim contains or
        implies factual or descriptive statements, which can be verified or falsified
        by empirical observation or through scientific analysis, and which may include,
        for example, descriptive reports, historical facts, or scientific claims.

        If so, try to identify them and render them in your own words.

        In doing so, watch out for ambiguity and vagueness in the claim. Make alternative
        interpretations explicit.

        End your analysis with a short list of all identified factual or descriptive
        statements in {language}. Formulate each statement in a concise manner and
        such that its factual nature stands out clearly.'
      system_prompt: null
  name: freetext_descriptive_analysis
  used_model_key: null
freetext_normative_analysis:
  description: Instruct the assistant to carry out free-text normative analysis.
  llm_specific_configs:
    default:
      prompt_template: 'The following {language} claim has been submitted for fact-checking.


        <claim>{claim}</claim>


        Before we proceed with retrieving evidence items, we carefully analyse the
        claim. Your task is to contribute to this preparatory analysis, as detailed
        below.

        In particular, you should thoroughly discuss whether the claim contains or
        implies normative statements, such as value judgements, recommendations, or
        evaluations. If so, try to identify them and render them in your own words.

        In doing so, watch out for ambiguity and vagueness in the claim. Make alternative
        interpretations explicit. However, avoid reading normative content into the
        claim without textual evidence.


        End your analysis with a short list of all identified normative statements
        in {language}. Formulate each statement in a concise manner and such that
        its normative nature stands out clearly.'
      system_prompt: null
  name: freetext_normative_analysis
  used_model_key: null
list_ascriptive_statements:
  description: Instruct the assistant to list ascriptions.
  llm_specific_configs:
    default:
      guidance_type: json
      prompt_template: 'The following {language} claim has been submitted for ascriptive
        content analysis.

        <claim>{claim}</claim>

        The analysis yielded the following results:


        <results>

        {ascriptive_analysis}

        </results>


        Your task is to list all ascriptions identified in this analysis. Clearly
        state each ascription as a concise {language} statement, such that it is transparent
        to whom it is attributed. Only include ascriptions that are explicitly attributed
        to a specific person or organisation.

        Format your (possibly empty) list of statements as a JSON object.

        Do not include any other text than the JSON object.'
      system_prompt: null
  name: list_ascriptive_statements
  used_model_key: null
list_descriptive_statements:
  description: Instruct the assistant to list factual claims.
  llm_specific_configs:
    default:
      guidance_type: json
      prompt_template: 'We have previously analysed the descriptive content of the
        following {language} claim:

        <claim>{claim}</claim>

        The analysis yielded the following results:


        <results>

        {descriptive_analysis}

        </results>


        Your task is to list all factual or descriptive {language} statements identified
        in the previous analysis. Only include clear cases, i.e. statements that are
        unambiguously factual or descriptive.

        Format your (possibly empty) list of statements as a JSON object.

        Do not include any other text than the JSON object.'
      system_prompt: null
  name: list_descriptive_statements
  used_model_key: null
list_normative_statements:
  description: Instruct the assistant to list normative claims.
  llm_specific_configs:
    default:
      guidance_type: json
      prompt_template: 'The following {language} claim has been submitted for normative
        content analysis.

        <claim>{claim}</claim>

        The analysis yielded the following results:


        <results>

        {normative_analysis}

        </results>


        Your task is to list all normative statements identified in this analysis
        (e.g., value judgements, recommendations, or evaluations) in {language}.

        Format your (possibly empty) list of statements as a JSON object.

        Do not include any other text than the JSON object.'
      system_prompt: null
  name: list_normative_statements
  used_model_key: null
negate_claim:
  description: Instruct the assistant to negate a claim.
  llm_specific_configs:
    default:
      prompt_template: 'Your task is to express the opposite of the following statement
        in plain and unequivocal language.

        Please generate a single {language} sentence that clearly states the negation.

        <statement>

        {statement}

        </statement>

        Provide only the negated statement in {language} without any additional comments.'
      system_prompt: null
  name: negate_claim
  used_model_key: null